{"version":3,"file":"scryll.cjs.production.min.js","sources":["../src/index.ts"],"sourcesContent":["const scryll = (\n  selector1: string,\n  selector2: string,\n  config = { init: true, direction: 'vertical' }\n) => {\n  if (selector1 === undefined || selector2 === undefined) {\n    new Error('You most provide two selectors');\n    return;\n  }\n\n  let preventScrollEvent: Boolean = false;\n  const element1: HTMLElement = document.querySelector(selector1) as HTMLElement;\n  const element2: HTMLElement = document.querySelector(selector2) as HTMLElement;\n\n  if (element1 === null || element2 === null) {\n    new Error('Invalid selector');\n    return;\n  }\n\n  const onScroll = () => {\n    if (preventScrollEvent) {\n      preventScrollEvent = false;\n      return;\n    }\n    preventScrollEvent = true;\n  };\n\n  const onElement1Scroll = (event: any): void => {\n    onScroll();\n    if (config.direction === 'vertical') {\n      element2.scrollTop = event.currentTarget.scrollTop;\n    } else {\n      element2.scrollTop = event.currentTarget.scrollLeft;\n    }\n  };\n\n  const onElement2Scroll = (event: any): void => {\n    onScroll();\n    if (config.direction === 'vertical') {\n      element1.scrollTop = event.currentTarget.scrollTop;\n    } else {\n      element1.scrollTop = event.currentTarget.scrollLeft;\n    }\n  };\n\n  const init = () => {\n    preventScrollEvent = false;\n    element1.addEventListener('scroll', onElement1Scroll);\n    element2.addEventListener('scroll', onElement2Scroll);\n  };\n\n  const kill = () => {\n    preventScrollEvent = false;\n    element1.removeEventListener('scroll', onElement1Scroll);\n    element2.removeEventListener('scroll', onElement2Scroll);\n  };\n\n  if (config.init === true) {\n    init();\n  }\n\n  return {\n    init,\n    kill,\n  };\n};\n\nexport default scryll;\n"],"names":["selector1","selector2","config","init","direction","undefined","element1","document","querySelector","element2","onElement1Scroll","event","scrollTop","currentTarget","scrollLeft","onElement2Scroll","addEventListener","kill","removeEventListener"],"mappings":"oFAAe,SACbA,EACAC,EACAC,GAEA,YAFAA,IAAAA,EAAS,CAAEC,MAAM,EAAMC,UAAW,kBAEhBC,IAAdL,QAAyCK,IAAdJ,EAA/B,CAMA,IAAMK,EAAwBC,SAASC,cAAcR,GAC/CS,EAAwBF,SAASC,cAAcP,GAErD,GAAiB,OAAbK,GAAkC,OAAbG,EAAzB,CAaA,IAAMC,EAAmB,SAACC,GAGtBF,EAASG,UADc,aAArBV,EAAOE,UACYO,EAAME,cAAcD,UAEpBD,EAAME,cAAcC,YAIvCC,EAAmB,SAACJ,GAGtBL,EAASM,UADc,aAArBV,EAAOE,UACYO,EAAME,cAAcD,UAEpBD,EAAME,cAAcC,YAIvCX,EAAO,WAEXG,EAASU,iBAAiB,SAAUN,GACpCD,EAASO,iBAAiB,SAAUD,IAatC,OAJoB,IAAhBb,EAAOC,MACTA,IAGK,CACLA,KAAAA,EACAc,KAZW,WAEXX,EAASY,oBAAoB,SAAUR,GACvCD,EAASS,oBAAoB,SAAUH"}